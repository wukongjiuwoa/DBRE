一、可视化的必要性：
	1.修复与告警
	2.性能与行为分析
	3.系统容量规划
	4.问题追踪与事后分析
	5.商务分析
	6.问题关联化与因果分析
	
与传统更侧重DB所在系统层面的监控相比，现代的可视化运维针对的海量的、分布式数据，数据收集与呈现已经被数据分析DA、商务智能BI所取代：
	用户层面：哪些指标影响SLO
	系统层面：哪些会导致系统中断，怎样减轻对SLO的影响？
	
于是在设计OpsViz时，要考虑：
	1.以BI为创建目标
	2.分布式、临时性数据存储的常态化
	3.对于关键的监控指标，使用高识别度的存储
  4.架构尽量简单化，专注与影响SLO的指标：延迟、可用性、请求率、资源利用率
  

二、OpsViz架构
一个好的架构应该是这样：
	1.自动化发现服务/应用，无需手动配置agent监控；
	2.产生的事件数据被路由到相应的模块/节点；
	2.海量数据去中心化，产生近结构化、分布式存储，近实时的查询；
	3.可视化输出
	
	考虑：
	1.数据的输入方式: [is The Data Safe? Is the Service Up? Are the consumers in Pain?]
	2.分布式监控 [Instrumenting the Application, Server/Instance, Datastore, Single/Aggregational]
	3.事件及其日志	->	
	4.Datastore Details:
		Connection Level:	USE
		Internal Visibility: 
			Throughput And Latency
			Commits, Redo, Journaling
			Replication State
			Memory Structures
			Locking and Concurrency
USE:
	U: 资源使用率，对应Latency
	S: 资源饱和度，对应请求量
	E: Errors

